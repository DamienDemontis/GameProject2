//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/Scripts/CamRoom/SurveillanceCamera/SurveillanceCameraInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @SurveillanceCameraInputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @SurveillanceCameraInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""SurveillanceCameraInputActions"",
    ""maps"": [
        {
            ""name"": ""SurveillanceCamera"",
            ""id"": ""4897fc05-4180-497f-afbd-9aa1e63f47f8"",
            ""actions"": [
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""36d84f70-3363-49d3-a748-4113a106b182"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Zoom In Out"",
                    ""type"": ""Value"",
                    ""id"": ""ed76b40f-26fc-4d1a-92a3-2c5af788550a"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""11e57af2-492d-4827-bdaa-ba846364e4e7"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Zoom In Out"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""527158ca-7761-4213-ac0b-68e11bade06d"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Zoom In Out"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""d9c59e84-b144-424f-95fc-a910d021c366"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Zoom In Out"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""4a70aca8-8220-4630-b171-84412a2760d4"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Zoom In Out"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""63bd2e8f-6672-41d0-bcad-9b38b884a199"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""2c2ef8a9-4788-4b3a-9b12-3d99db4d397a"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""04bd32bb-4c71-4c35-96b4-c0c7b5483c65"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""69d48d2c-6258-495f-8fda-a4e3be1c7af4"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""15e7456f-4452-4d7f-a8e7-a99647938be5"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""fcca0bee-f28a-4824-acff-4c1713969491"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // SurveillanceCamera
        m_SurveillanceCamera = asset.FindActionMap("SurveillanceCamera", throwIfNotFound: true);
        m_SurveillanceCamera_Look = m_SurveillanceCamera.FindAction("Look", throwIfNotFound: true);
        m_SurveillanceCamera_ZoomInOut = m_SurveillanceCamera.FindAction("Zoom In Out", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // SurveillanceCamera
    private readonly InputActionMap m_SurveillanceCamera;
    private List<ISurveillanceCameraActions> m_SurveillanceCameraActionsCallbackInterfaces = new List<ISurveillanceCameraActions>();
    private readonly InputAction m_SurveillanceCamera_Look;
    private readonly InputAction m_SurveillanceCamera_ZoomInOut;
    public struct SurveillanceCameraActions
    {
        private @SurveillanceCameraInputActions m_Wrapper;
        public SurveillanceCameraActions(@SurveillanceCameraInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Look => m_Wrapper.m_SurveillanceCamera_Look;
        public InputAction @ZoomInOut => m_Wrapper.m_SurveillanceCamera_ZoomInOut;
        public InputActionMap Get() { return m_Wrapper.m_SurveillanceCamera; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SurveillanceCameraActions set) { return set.Get(); }
        public void AddCallbacks(ISurveillanceCameraActions instance)
        {
            if (instance == null || m_Wrapper.m_SurveillanceCameraActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_SurveillanceCameraActionsCallbackInterfaces.Add(instance);
            @Look.started += instance.OnLook;
            @Look.performed += instance.OnLook;
            @Look.canceled += instance.OnLook;
            @ZoomInOut.started += instance.OnZoomInOut;
            @ZoomInOut.performed += instance.OnZoomInOut;
            @ZoomInOut.canceled += instance.OnZoomInOut;
        }

        private void UnregisterCallbacks(ISurveillanceCameraActions instance)
        {
            @Look.started -= instance.OnLook;
            @Look.performed -= instance.OnLook;
            @Look.canceled -= instance.OnLook;
            @ZoomInOut.started -= instance.OnZoomInOut;
            @ZoomInOut.performed -= instance.OnZoomInOut;
            @ZoomInOut.canceled -= instance.OnZoomInOut;
        }

        public void RemoveCallbacks(ISurveillanceCameraActions instance)
        {
            if (m_Wrapper.m_SurveillanceCameraActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ISurveillanceCameraActions instance)
        {
            foreach (var item in m_Wrapper.m_SurveillanceCameraActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_SurveillanceCameraActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public SurveillanceCameraActions @SurveillanceCamera => new SurveillanceCameraActions(this);
    public interface ISurveillanceCameraActions
    {
        void OnLook(InputAction.CallbackContext context);
        void OnZoomInOut(InputAction.CallbackContext context);
    }
}
